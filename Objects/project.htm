<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Jul 29 17:01:20 2022
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SYS_Init &rArr; APP_config &rArr; UART_Configuration &rArr; USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC_IRQHandler</a> from interrupts_cw32f030.o(i.ADC_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[17]">ATIM_IRQHandler</a> from atim.o(i.ATIM_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[28]">AWT_IRQHandler</a> from interrupts_cw32f030.o(i.AWT_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[1e]">BTIM1_IRQHandler</a> from btim.o(i.BTIM1_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[1f]">BTIM2_IRQHandler</a> from interrupts_cw32f030.o(i.BTIM2_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[20]">BTIM3_IRQHandler</a> from interrupts_cw32f030.o(i.BTIM3_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[13]">DMACH1_IRQHandler</a> from interrupts_cw32f030.o(i.DMACH1_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[14]">DMACH23_IRQHandler</a> from interrupts_cw32f030.o(i.DMACH23_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[15]">DMACH45_IRQHandler</a> from interrupts_cw32f030.o(i.DMACH45_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[29]">FAULT_IRQHandler</a> from interrupts_cw32f030.o(i.FAULT_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[d]">FLASHRAM_IRQHandler</a> from interrupts_cw32f030.o(i.FLASHRAM_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[f]">GPIOA_IRQHandler</a> from interrupts_cw32f030.o(i.GPIOA_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[10]">GPIOB_IRQHandler</a> from encoder.o(i.GPIOB_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[11]">GPIOC_IRQHandler</a> from interrupts_cw32f030.o(i.GPIOC_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[12]">GPIOF_IRQHandler</a> from interrupts_cw32f030.o(i.GPIOF_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[1a]">GTIM1_IRQHandler</a> from encoder.o(i.GTIM1_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[1b]">GTIM2_IRQHandler</a> from gtim.o(i.GTIM2_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[1c]">GTIM3_IRQHandler</a> from interrupts_cw32f030.o(i.GTIM3_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[1d]">GTIM4_IRQHandler</a> from interrupts_cw32f030.o(i.GTIM4_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from interrupts_cw32f030.o(i.HardFault_Handler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[21]">I2C1_IRQHandler</a> from interrupts_cw32f030.o(i.I2C1_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[22]">I2C2_IRQHandler</a> from interrupts_cw32f030.o(i.I2C2_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from interrupts_cw32f030.o(i.LVD_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from interrupts_cw32f030.o(i.NMI_Handler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from interrupts_cw32f030.o(i.PendSV_Handler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from interrupts_cw32f030.o(i.RCC_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from interrupts_cw32f030.o(i.RTC_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from startup_cw32f030.o(.text) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from interrupts_cw32f030.o(i.SPI1_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[24]">SPI2_IRQHandler</a> from interrupts_cw32f030.o(i.SPI2_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from interrupts_cw32f030.o(i.SVC_Handler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from cw32f030_systick.o(i.SysTick_Handler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[2b]">SystemInit</a> from system_cw32f030.o(i.SystemInit) referenced from startup_cw32f030.o(.text)
 <LI><a href="#[1]">TasksHandle_100MS</a> from app.o(i.TasksHandle_100MS) referenced 2 times from task.o(.data)
 <LI><a href="#[0]">TasksHandle_10MS</a> from app.o(i.TasksHandle_10MS) referenced 2 times from task.o(.data)
 <LI><a href="#[2]">TasksHandle_250MS</a> from app.o(i.TasksHandle_250MS) referenced 2 times from task.o(.data)
 <LI><a href="#[3]">TasksHandle_500MS</a> from app.o(i.TasksHandle_500MS) referenced 2 times from task.o(.data)
 <LI><a href="#[25]">UART1_IRQHandler</a> from interrupts_cw32f030.o(i.UART1_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[26]">UART2_IRQHandler</a> from interrupts_cw32f030.o(i.UART2_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[27]">UART3_IRQHandler</a> from interrupts_cw32f030.o(i.UART3_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[18]">VC1_IRQHandler</a> from interrupts_cw32f030.o(i.VC1_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[19]">VC2_IRQHandler</a> from interrupts_cw32f030.o(i.VC2_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[a]">WDT_IRQHandler</a> from interrupts_cw32f030.o(i.WDT_IRQHandler) referenced from startup_cw32f030.o(RESET)
 <LI><a href="#[2c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cw32f030.o(.text)
 <LI><a href="#[2a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(.text)
</UL>
<P><STRONG><a name="[c5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[47]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[c7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[c8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ca]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cw32f030.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Enable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysctrl_GetHClkFreq
</UL>

<P><STRONG><a name="[2f]"></a>__aeabi_ldivmod</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Enable
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Enable
</UL>

<P><STRONG><a name="[cd]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[d0]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[d2]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[d3]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3c]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d4]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>

<P><STRONG><a name="[35]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[3e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[3d]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d6]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[d8]"></a>__decompress2</STRONG> (Thumb, 96 bytes, Stack size unknown bytes, __dclz77c.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>BTIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cw32f030_btim.o(RAMCODE))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>ADC_Configuration</STRONG> (Thumb, 440 bytes, Stack size 80 bytes, adc.o(i.ADC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ADC_Configuration &rArr; ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ITConfig
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[4b]"></a>ADC_Enable</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, cw32f030_adc.o(i.ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADC_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[4f]"></a>ADC_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_adc.o(i.ADC_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
</UL>

<P><STRONG><a name="[16]"></a>ADC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.ADC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ADC_Init</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, cw32f030_adc.o(i.ADC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[50]"></a>APP_config</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, app.o(i.APP_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = APP_config &rArr; UART_Configuration &rArr; USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Play_1
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_I2C_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Configuration
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_Configuration
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_Configuration
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[6d]"></a>ATIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_IRQHandler
</UL>

<P><STRONG><a name="[69]"></a>ATIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[5b]"></a>ATIM_Configuration</STRONG> (Thumb, 358 bytes, Stack size 80 bytes, atim.o(i.ATIM_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ATIM_Configuration &rArr; ATIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_SetCompare4
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_SetCompare3A
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_SetCompare2A
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_SetCompare1A
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_PWMOutputConfig
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_OC4Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_OC3AInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_OC2AInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_OC1AInit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_CtrlPWMOutputs
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[68]"></a>ATIM_CtrlPWMOutputs</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Commutation
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[6c]"></a>ATIM_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_IRQHandler
</UL>

<P><STRONG><a name="[17]"></a>ATIM_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, atim.o(i.ATIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_GetITStatus
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>ATIM_Init</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[61]"></a>ATIM_OC1AInit</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_OC1AInit))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[62]"></a>ATIM_OC2AInit</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_OC2AInit))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[63]"></a>ATIM_OC3AInit</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_OC3AInit))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[6a]"></a>ATIM_OC4Init</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, cw32f030_atim.o(i.ATIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ATIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[67]"></a>ATIM_PWMOutputConfig</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, cw32f030_atim.o(i.ATIM_PWMOutputConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ATIM_PWMOutputConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[64]"></a>ATIM_SetCompare1A</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_SetCompare1A))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Commutation
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[65]"></a>ATIM_SetCompare2A</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_SetCompare2A))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Commutation
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[66]"></a>ATIM_SetCompare3A</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_SetCompare3A))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Commutation
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[6b]"></a>ATIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cw32f030_atim.o(i.ATIM_SetCompare4))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[28]"></a>AWT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.AWT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>BTIM1_Configuration</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, btim.o(i.BTIM1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = BTIM1_Configuration &rArr; BTIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM_TimeBaseInit
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM_ITConfig
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[1e]"></a>BTIM1_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, btim.o(i.BTIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Marks_Handler_Callback
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM_GetITStatus
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>BTIM2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.BTIM2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>BTIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.BTIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>BTIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cw32f030_btim.o(i.BTIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_Configuration
</UL>

<P><STRONG><a name="[71]"></a>BTIM_GetITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cw32f030_btim.o(i.BTIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_IRQHandler
</UL>

<P><STRONG><a name="[6f]"></a>BTIM_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_btim.o(i.BTIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_Configuration
</UL>

<P><STRONG><a name="[6e]"></a>BTIM_TimeBaseInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cw32f030_btim.o(i.BTIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BTIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_Configuration
</UL>

<P><STRONG><a name="[55]"></a>Buzzer_Init</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, buzzer.o(i.Buzzer_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Buzzer_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[74]"></a>Calculate_PWM_duty</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, encoder.o(i.Calculate_PWM_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Calculate_PWM_duty
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_SetCounterValue
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_Reed_CNT_Value
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GFP_abs
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
</UL>

<P><STRONG><a name="[78]"></a>Commutation</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, motor.o(i.Commutation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Commutation
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_SetCompare3A
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_SetCompare2A
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_SetCompare1A
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_CtrlPWMOutputs
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Motor_Start
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_IRQHandler
</UL>

<P><STRONG><a name="[13]"></a>DMACH1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, interrupts_cw32f030.o(i.DMACH1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMACH1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandlerCallBack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>DMACH1_IRQHandlerCallBack</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, adc.o(i.DMACH1_IRQHandlerCallBack))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandler
</UL>

<P><STRONG><a name="[14]"></a>DMACH23_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, interrupts_cw32f030.o(i.DMACH23_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMACH23_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetITStatus
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMACH45_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.DMACH45_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>DMA_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cw32f030_dma.o(i.DMA_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH23_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>DMA_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cw32f030_dma.o(i.DMA_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[79]"></a>DMA_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_dma.o(i.DMA_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH23_IRQHandler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMACH1_IRQHandler
</UL>

<P><STRONG><a name="[4e]"></a>DMA_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_dma.o(i.DMA_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[4c]"></a>DMA_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, cw32f030_dma.o(i.DMA_Init))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Configuration
</UL>

<P><STRONG><a name="[5e]"></a>Encoder_Init</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, encoder.o(i.Encoder_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Encoder_Init &rArr; GTIM1_Configuration &rArr; GTIM_EncodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[29]"></a>FAULT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.FAULT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASHRAM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.FLASHRAM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[ab]"></a>FLASH_SetLatency</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, cw32f030_flash.o(i.FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[77]"></a>GFP_abs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, encoder.o(i.GFP_abs))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculate_PWM_duty
</UL>

<P><STRONG><a name="[f]"></a>GPIOA_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.GPIOA_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GPIOB_IRQHandler</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, encoder.o(i.GPIOB_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIOC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.GPIOC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIOF_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.GPIOF_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>GPIO_Init</STRONG> (Thumb, 252 bytes, Stack size 0 bytes, cw32f030_gpio.o(i.GPIO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_I2C_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_Configuration
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ATIM_Configuration
</UL>

<P><STRONG><a name="[7c]"></a>GTIM1_Configuration</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, encoder.o(i.GTIM1_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GTIM1_Configuration &rArr; GTIM_EncodeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_EncodeInit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_TimeBaseInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_ITConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Encoder_Init
</UL>

<P><STRONG><a name="[1a]"></a>GTIM1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, encoder.o(i.GTIM1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GTIM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_GetITStatus
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>GTIM2_Configuration</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, gtim.o(i.GTIM2_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GTIM2_Configuration &rArr; GTIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_TimeBaseInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_ITConfig
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_ICInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_Cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[1b]"></a>GTIM2_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gtim.o(i.GTIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GTIM2_IRQHandler &rArr; Commutation
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Check
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Commutation
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_GetITStatus
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GTIM3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.GTIM3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GTIM4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.GTIM4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>GTIM_ClearITPendingBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cw32f030_gtim.o(i.GTIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_IRQHandler
</UL>

<P><STRONG><a name="[80]"></a>GTIM_Cmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cw32f030_gtim.o(i.GTIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_Configuration
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_Configuration
</UL>

<P><STRONG><a name="[7e]"></a>GTIM_EncodeInit</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, cw32f030_gtim.o(i.GTIM_EncodeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GTIM_EncodeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_Configuration
</UL>

<P><STRONG><a name="[82]"></a>GTIM_GetITStatus</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, cw32f030_gtim.o(i.GTIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_IRQHandler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>GTIM_ICInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, cw32f030_gtim.o(i.GTIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GTIM_ICInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_Configuration
</UL>

<P><STRONG><a name="[7f]"></a>GTIM_ITConfig</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, cw32f030_gtim.o(i.GTIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GTIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_Configuration
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_Configuration
</UL>

<P><STRONG><a name="[75]"></a>GTIM_Reed_CNT_Value</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, encoder.o(i.GTIM_Reed_CNT_Value))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculate_PWM_duty
</UL>

<P><STRONG><a name="[76]"></a>GTIM_SetCounterValue</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cw32f030_gtim.o(i.GTIM_SetCounterValue))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculate_PWM_duty
</UL>

<P><STRONG><a name="[7d]"></a>GTIM_TimeBaseInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, cw32f030_gtim.o(i.GTIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GTIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_Configuration
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_Configuration
</UL>

<P><STRONG><a name="[86]"></a>HALL_Check</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, motor.o(i.HALL_Check))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Motor_Start
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>HALL_Motor_Start</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, motor.o(i.HALL_Motor_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HALL_Motor_Start &rArr; Commutation
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Check
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Commutation
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_100MS
</UL>

<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>I2C1_DeInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C1_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_I2C_Init
</UL>

<P><STRONG><a name="[21]"></a>I2C1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.I2C1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.I2C2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>I2C_AcknowledgeConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_AcknowledgeConfig))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Init
</UL>

<P><STRONG><a name="[92]"></a>I2C_BaudGeneratorEnable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_BaudGeneratorEnable))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Init
</UL>

<P><STRONG><a name="[8f]"></a>I2C_ClearIrq</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_ClearIrq))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>

<P><STRONG><a name="[9c]"></a>I2C_Cmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_I2C_Init
</UL>

<P><STRONG><a name="[93]"></a>I2C_FilterConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_FilterConfig))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Init
</UL>

<P><STRONG><a name="[89]"></a>I2C_GenerateSTART</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_GenerateSTART))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>

<P><STRONG><a name="[8e]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>

<P><STRONG><a name="[8a]"></a>I2C_GetIrq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_GetIrq))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>

<P><STRONG><a name="[8b]"></a>I2C_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>

<P><STRONG><a name="[88]"></a>I2C_MasterWriteByte</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, oled_iic.o(i.I2C_MasterWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_MasterWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Send7bitAddress
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetState
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetIrq
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTART
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearIrq
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
</UL>

<P><STRONG><a name="[90]"></a>I2C_Master_Init</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, cw32f030_i2c.o(i.I2C_Master_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = I2C_Master_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetBaud
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FilterConfig
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_BaudGeneratorEnable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AcknowledgeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_I2C_Init
</UL>

<P><STRONG><a name="[8c]"></a>I2C_Send7bitAddress</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_Send7bitAddress))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>

<P><STRONG><a name="[8d]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>

<P><STRONG><a name="[91]"></a>I2C_SetBaud</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cw32f030_i2c.o(i.I2C_SetBaud))
<BR><BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Init
</UL>

<P><STRONG><a name="[96]"></a>IWDT_Cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cw32f030_iwdt.o(i.IWDT_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Configuration
</UL>

<P><STRONG><a name="[52]"></a>IWDT_Configuration</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, iwdt.o(i.IWDT_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IWDT_Configuration
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Refresh
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[95]"></a>IWDT_Init</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, cw32f030_iwdt.o(i.IWDT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Configuration
</UL>

<P><STRONG><a name="[97]"></a>IWDT_Refresh</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cw32f030_iwdt.o(i.IWDT_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Configuration
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_250MS
</UL>

<P><STRONG><a name="[b6]"></a>KEY_Handle</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, key.o(i.KEY_Handle))
<BR><BR>[Called By]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_10MS
</UL>

<P><STRONG><a name="[54]"></a>KEY_Init</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, key.o(i.KEY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = KEY_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[53]"></a>LED_Init</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LED_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.LVD_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>OLED_Clear</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, oled_iic.o(i.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OLED_Clear &rArr; OLED_Refresh &rArr; WriteDat &rArr; I2C_MasterWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[a1]"></a>OLED_ClearPoint</STRONG> (Thumb, 86 bytes, Stack size 20 bytes, oled_iic.o(i.OLED_ClearPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OLED_ClearPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>

<P><STRONG><a name="[99]"></a>OLED_Display_On</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, oled_iic.o(i.OLED_Display_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = OLED_Display_On &rArr; WriteCmd &rArr; I2C_MasterWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[a0]"></a>OLED_DrawPoint</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, oled_iic.o(i.OLED_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OLED_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>

<P><STRONG><a name="[56]"></a>OLED_I2C_Init</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, oled_iic.o(i.OLED_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OLED_I2C_Init &rArr; I2C_Master_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Master_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[57]"></a>OLED_Init</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, oled_iic.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = OLED_Init &rArr; OLED_Clear &rArr; OLED_Refresh &rArr; WriteDat &rArr; I2C_MasterWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_On
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[59]"></a>OLED_Play_1</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, oled_iic.o(i.OLED_Play_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = OLED_Play_1 &rArr; OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[a3]"></a>OLED_Pow</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, oled_iic.o(i.OLED_Pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OLED_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
</UL>

<P><STRONG><a name="[98]"></a>OLED_Refresh</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, oled_iic.o(i.OLED_Refresh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = OLED_Refresh &rArr; WriteDat &rArr; I2C_MasterWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Play_1
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_500MS
</UL>

<P><STRONG><a name="[9e]"></a>OLED_ShowChar</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, oled_iic.o(i.OLED_ShowChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DrawPoint
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ClearPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Play_1
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowString
</UL>

<P><STRONG><a name="[a2]"></a>OLED_ShowNum</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, oled_iic.o(i.OLED_ShowNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Pow
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_500MS
</UL>

<P><STRONG><a name="[9d]"></a>OLED_ShowString</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, oled_iic.o(i.OLED_ShowString))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = OLED_ShowString &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowChar
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Play_1
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[a6]"></a>RCC_AHBPeriphClk_Enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cw32f030_rcc.o(i.RCC_AHBPeriphClk_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[bd]"></a>RCC_APBPeriphClk_Enable2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, cw32f030_rcc.o(i.RCC_APBPeriphClk_Enable2))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[a5]"></a>RCC_Configuration</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, sys_init.o(i.RCC_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = RCC_Configuration &rArr; RCC_HSE_Enable &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SystemCoreClockUpdate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Switch
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_Enable
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PCLKPRS_Config
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSI_Disable
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HSE_Enable
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKPRS_Config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClk_Enable
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetLatency
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[a8]"></a>RCC_HCLKPRS_Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_rcc.o(i.RCC_HCLKPRS_Config))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[a7]"></a>RCC_HSE_Enable</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, cw32f030_rcc.o(i.RCC_HSE_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RCC_HSE_Enable &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[ae]"></a>RCC_HSI_Disable</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_rcc.o(i.RCC_HSI_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.RCC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[a9]"></a>RCC_PCLKPRS_Config</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cw32f030_rcc.o(i.RCC_PCLKPRS_Config))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[aa]"></a>RCC_PLL_Enable</STRONG> (Thumb, 168 bytes, Stack size 64 bytes, cw32f030_rcc.o(i.RCC_PLL_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = RCC_PLL_Enable
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[ac]"></a>RCC_SysClk_Switch</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, cw32f030_rcc.o(i.RCC_SysClk_Switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RCC_SysClk_Switch &rArr; RCC_Sysctrl_GetHClkFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SystemCoreClockUpdate
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysctrl_GetHClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[b0]"></a>RCC_Sysctrl_GetHClkFreq</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, cw32f030_rcc.o(i.RCC_Sysctrl_GetHClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_Sysctrl_GetHClkFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Switch
</UL>

<P><STRONG><a name="[ad]"></a>RCC_SystemCoreClockUpdate</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cw32f030_rcc.o(i.RCC_SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SysClk_Switch
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>

<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.RTC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.SPI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.SPI2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[b2]"></a>SYS_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sys_init.o(i.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = SYS_Init &rArr; APP_config &rArr; UART_Configuration &rArr; USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay1ms
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Configuration
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>Speed_Count</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gtim.o(i.Speed_Count))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TasksHandle_500MS
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cw32f030_systick.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_cw32f030.o(i.SystemCoreClockUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2b]"></a>SystemInit</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, system_cw32f030.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(.text)
</UL>
<P><STRONG><a name="[73]"></a>Task_Marks_Handler_Callback</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, task.o(i.Task_Marks_Handler_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTIM1_IRQHandler
</UL>

<P><STRONG><a name="[c4]"></a>Task_Pro_Handler_Callback</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, task.o(i.Task_Pro_Handler_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Task_Pro_Handler_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1]"></a>TasksHandle_100MS</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, app.o(i.TasksHandle_100MS))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = TasksHandle_100MS &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Motor_Start
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Check
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Commutation
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Calculate_PWM_duty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>TasksHandle_10MS</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app.o(i.TasksHandle_10MS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TasksHandle_10MS
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_Handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>TasksHandle_250MS</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app.o(i.TasksHandle_250MS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TasksHandle_250MS
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDT_Refresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>TasksHandle_500MS</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app.o(i.TasksHandle_500MS))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = TasksHandle_500MS &rArr; OLED_ShowNum &rArr; OLED_ShowChar &rArr; OLED_DrawPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Count
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ShowNum
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(.data)
</UL>
<P><STRONG><a name="[b8]"></a>UART1_IRQHandleCallback</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, uart.o(i.UART1_IRQHandleCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandleCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData_8bit
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData_8bit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[25]"></a>UART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, interrupts_cw32f030.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler &rArr; UART1_IRQHandleCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandleCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>UART2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.UART2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>UART3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.UART3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>UART_Configuration</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, uart.o(i.UART_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = UART_Configuration &rArr; USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClk_Enable
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APBPeriphClk_Enable2
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
</UL>

<P><STRONG><a name="[ba]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cw32f030_uart.o(i.USART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandleCallback
</UL>

<P><STRONG><a name="[b9]"></a>USART_GetITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cw32f030_uart.o(i.USART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandleCallback
</UL>

<P><STRONG><a name="[c0]"></a>USART_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cw32f030_uart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[be]"></a>USART_Init</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, cw32f030_uart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[bb]"></a>USART_ReceiveData_8bit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, cw32f030_uart.o(i.USART_ReceiveData_8bit))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandleCallback
</UL>

<P><STRONG><a name="[bc]"></a>USART_SendData_8bit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cw32f030_uart.o(i.USART_SendData_8bit))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandleCallback
</UL>

<P><STRONG><a name="[18]"></a>VC1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.VC1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>VC2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.VC2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WDT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupts_cw32f030.o(i.WDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cw32f030.o(RESET)
</UL>
<P><STRONG><a name="[9a]"></a>WriteCmd</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, oled_iic.o(i.WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteCmd &rArr; I2C_MasterWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display_On
</UL>

<P><STRONG><a name="[9f]"></a>WriteDat</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, oled_iic.o(i.WriteDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteDat &rArr; I2C_MasterWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Refresh
</UL>

<P><STRONG><a name="[46]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b1]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, cw32f030_i2c.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Sysctrl_GetHClkFreq
</UL>

<P><STRONG><a name="[d9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[da]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[db]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[5c]"></a>delay1ms</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, system_cw32f030.o(i.delay1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = delay1ms &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_config
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[2a]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = main &rArr; SYS_Init &rArr; APP_config &rArr; UART_Configuration &rArr; USART_Init &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Pro_Handler_Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[bf]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, uart.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Configuration
</UL>

<P><STRONG><a name="[84]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, gtim.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM2_Configuration
</UL>

<P><STRONG><a name="[81]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, encoder.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GTIM1_Configuration
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
